
//© A+ Computer Science  -  www.apluscompsci.com
//Name -
//Date -
//Class -
//Lab  -

import java.awt.Color;
import java.awt.Graphics;

public class Ball extends Block {
	private int xSpeed;
	private int ySpeed;

	public Ball() {
		super(200, 200);
		xSpeed = 3;
		ySpeed = 1;
		setWidth(10);
		setHeight(10);
		setColor(Color.BLACK);
	}

	// add the other Ball constructors
	public Ball(int x, int y) {

		super(x, y);
		xSpeed = 3;
		ySpeed = 1;
		setWidth(10);
		setHeight(10);
		setColor(Color.BLACK);

	}

	public Ball(int x, int y, int w, int h) {

		super(x, y, w, h);
		xSpeed = 3;
		ySpeed = 1;
		setColor(Color.BLACK);

	}

	public Ball(int x, int y, int w, int h, Color col) {

		super(x, y, w, h, col);
		xSpeed = 3;
		ySpeed = 1;

	}

	public Ball(int x, int y, int w, int h, Color col, int xs, int ys) {

		super(x, y, w, h, col);
		xSpeed = xs;
		ySpeed = ys;
	}

	public Ball(int x, int y, int w, int h, int xs, int ys) {

		super(x, y, w, h);
		xSpeed = xs;
		ySpeed = ys;
	}

	public void setXSpeed(int xs) {

		xSpeed = xs;

	}

	public void setYSpeed(int ys) {

		ySpeed = ys;

	}

	public int getxSpeed() {
		return xSpeed;
	}

	public int getySpeed() {
		return ySpeed;
	}

	// add the set methods

	public void moveAndDraw(Graphics window) {
		// draw a white ball at old ball location
		draw(window, Color.WHITE);

		setX(getX() + xSpeed);
		setY(getY() + ySpeed);
		// setY

		// draw the ball at its new location
		draw(window, Color.BLACK);
	}

	public boolean didCollideTop(Object obj) {

		Wall n = (Wall) obj;

		if (getY() <= n.getY() + n.getHeight())

			return true;

		else

			return false;

	}

	public boolean didCollideBottom(Object obj) {

		Wall n = (Wall) obj;

		if (getY() >= n.getY() - n.getHeight())

			return true;

		else

			return false;

	}

	public boolean didCollideLeft(Object obj) {

		Wall n = (Wall) obj;

		if (getX() <= n.getX() + n.getWidth())

			return true;

		else

			return false;

	}

	public boolean didCollideRight(Object obj) {

		Wall n = (Wall) obj;

		if (getX() >= n.getX() - n.getWidth())

			return true;

		else

			return false;

	}



	public boolean didCollideTileTop(Object obj) {

		Tile tile = (Tile) obj;

	/**	if ((this.getY() <= tile.getY() + tile.getHeight() - this.getySpeed()
				&& this.getY() >= tile.getY() + this.getySpeed()) 
				&& this.getX() >= tile.getX()
				&& this.getX() + this.getWidth() <= tile.getX() + tile.getWidth() 
				&& this.getySpeed() < 0) {
			return true;
		}
		*/
		return false;

	}

	public boolean didCollideTileBottom(Object obj) {

		Tile tile = (Tile) obj;


		if((this.getY()+this.getHeight()>=tile.getY()-this.getySpeed() 
				&& this.getY()+this.getHeight()<=tile.getY()+this.getySpeed()+5)
				&& this.getX()>=tile.getX() 
				&& this.getX()+this.getWidth()<=tile.getX()+tile.getWidth()
				&& this.getySpeed() > 0){
			return true;
		}
		return false;


	}

	public boolean didCollideTileLeft(Object obj) {

		Tile tile = (Tile) obj;

		if (this.getX() <= tile.getX() + tile.getWidth() - this.getxSpeed()
				&& this.getX() >= tile.getX() + tile.getWidth() + this.getxSpeed() - 5
				&& this.getY() + this.getHeight() >= tile.getY()
				&& this.getY() <= tile.getY() + tile.getHeight()
				&& this.getxSpeed() < 0) {

			return true;

		}

		return false;

	}

	public boolean didCollideTileRight(Object obj) {

		Tile tile = (Tile) obj;

		if (this.getX() + this.getWidth() >= tile.getX() - this.getxSpeed()
				&& this.getX() + this.getWidth() <= tile.getX() + this.getxSpeed() + 5
				&& this.getY() + this.getHeight() >= tile.getY() && this.getY() <= tile.getY() + tile.getHeight()
				&& this.getxSpeed() > 0) {
			return true;
		}
		return false;
	}

	public boolean equals(Object obj) {

		Ball new2 = (Ball) obj;

		if ((this.getColor() == (new2.getColor()) && (this.getX() == new2.getX()) && (this.getY() == new2.getY())
				&& (this.getWidth() == new2.getWidth()) && (this.getHeight() == new2.getHeight()))
				&& (this.getxSpeed() == (new2.getxSpeed())) && (this.getxSpeed() == (new2.getxSpeed()))) {

			return true;

		}

		return false;
	}

	// add the get methods

	// add a toString() method
	public String toString() {
		return getX() + " " + getY() + " " + getWidth() + " " + getHeight() + " " + getColor() + " " + getxSpeed() + " "
				+ getySpeed();
	}
}